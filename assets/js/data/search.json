[ { "title": "Linux系统的内存管理", "url": "/posts/Linux%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/", "categories": "操作系统", "tags": "内存管理", "date": "2021-11-09 06:36:31 +0800", "snippet": "内存管理的发展过程DOS操作系统时代磁盘操作系统（Disk Operating System），是早期个人计算机上的一类操作系统。DOS在IBM PC 兼容机市场中占有举足轻重的地位。可以直接操纵管理硬盘的文件，以DOS的形式运行。微软图形界面操作系统Windows NT问世以来，DOS是一个后台程序的形式出现的。名为Windows命令提示符。可以通过点击运行-CMD进入。特点：它是一个单用户单任务操作系统，同一时间只能有一个进程在运行（也有一些特殊算法可以支持多进程）。Windows 9xWindows 9x是指对Windows 95及Windows 98、Windows ME等以Wi..." }, { "title": "Java Web开发模板", "url": "/posts/JavaWeb%E6%A8%A1%E6%9D%BF/", "categories": "JAVA基础", "tags": "JAVA", "date": "2021-10-25 23:10:31 +0800", "snippet": "Java Web开发模板1、Servlet项目web.xml模板：&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&amp;gt;&amp;lt;web-app xmlns=&quot;http://xmlns.jcp.org/xml/ns/javaee&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://xmlns.jcp...." }, { "title": "常用的基本排序的Java和PHP实现", "url": "/posts/%E5%85%AB%E5%A4%A7%E5%9F%BA%E6%9C%AC%E6%8E%92%E5%BA%8F%E7%9A%84Java%E5%92%8CPHP%E5%AE%9E%E7%8E%B0/", "categories": "数据结构与算法", "tags": "JAVA, 排序算法， PHP", "date": "2021-07-02 18:47:31 +0800", "snippet": "常用的基本排序的Java和PHP实现" }, { "title": "SpringCloud学习笔记", "url": "/posts/SpringCloud%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/", "categories": "SpringCloud", "tags": "JAVA, SpringCloud", "date": "2021-05-19 14:47:31 +0800", "snippet": "SpringCloud学习笔记1、SpringCloud基本知识2、各组件基本使用2.1 Eureka注册中心 Eureka服务端搭建 pom.xml &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-cloud-starter-netflix-eureka-server&amp;lt;/artifactId&amp;gt;&amp;lt;/depend..." }, { "title": "中间件学习之KAFKA", "url": "/posts/%E4%B8%AD%E9%97%B4%E4%BB%B6%E4%B9%8BKAFKA/", "categories": "MQ", "tags": "KAFKA", "date": "2021-05-09 07:23:31 +0800", "snippet": "KAFKA单机及集群部署学习一、概述1、关键作用：解耦、削峰填谷、异步处理2、常见的MQ消费分类：至多一次消费、没限制3、kafka名词解释：topic：一个消息只能进入一个topic中；partition：每个topic会根据分区数划分多个分区，每个分区相互独立。消息有key时使用hash分发到对应分区，无key使用轮询分散到各个分区；分区数：决定每个topic有多少个partition；副本因子：决定每个partition在kafka集群中有多少个副本，副本在不同的节点上，防止单点故障；broker：kafka集群中的机器，每一个机器就是一个broker，每个broker负责若干个分..." }, { "title": "Docker与Kubernetes学习笔记", "url": "/posts/Docker%E4%B8%8EKubernetes%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/", "categories": "运维与自动化", "tags": "Kubernetes, Docker", "date": "2021-05-08 15:52:31 +0800", "snippet": "备忘目录：/var/local/k8s 部署相关/usr/local/data/www-data 共享目录/usr/local/k8s-install 相关安装包目录运行环境：VMware下的3台Centos7虚拟机：master：192.168.93.129node1：192.168.93.130node2：192.168.93.131Docker入门笔记1、前置准备：配置yum源工具：yum install -y yum-utils device-mapper-persistent-data lvm2配置阿里的安装源yum-config-manager --add-repo http..." }, { "title": "MySQL备忘笔记", "url": "/posts/MySQL%E5%A4%87%E5%BF%98%E7%AC%94%E8%AE%B0/", "categories": "数据库", "tags": "MySQL", "date": "2021-04-20 11:23:31 +0800", "snippet": "数据库三大范式是什么第一范式：每个列都不可再分；第二范式：在第一范式的基础上，所有列都必须完全依赖于主键，而不能只依赖主键的一部分；第三范式：在第二范式的基础上，非主键列只能依赖于主键列，而不能依赖于非主键列；在设计数据库时要尽量遵循三大范式，如果不遵循必须要有充足的理由，比如性能考虑，会采用适当的字段冗余来减少连表操作。MySQL的binlog有几种录入格式？分别有什么区别？MySQL的binglog一共有3中录入格式，分别是：statement、row、mixed。statement：只记录会修改的sql，以及执行sql的上下文信息，不会记录每一行记录的具体修改，减少了binlog的..." }, { "title": "你对限流了解多少", "url": "/posts/%E9%99%90%E6%B5%81%E7%9A%84%E7%90%86%E8%A7%A3/", "categories": "计算机网络", "tags": "限流", "date": "2021-04-19 18:23:31 +0800", "snippet": "什么是限流限流的本质是因为后端处理能力有限，需要截掉超过处理能力之外的请求，亦或是为了均衡客户端对服务端资源的公平调用，防止一些客户端饿死。常见的限流算法1. 计数限流最简单的限流算法就是计数限流了，具体实现流程：例如系统能同时处理 100 个请求，保存一个计数器，处理了一个请求，计数器就加一，一个请求处理完毕之后计数器减一。每次请求来的时候看看计数器的值，如果超过阈值就拒绝。如果放在第三方存储里，例如 Redis 中，集群机器访问就算分布式限流算法。优点就是：简单粗暴，单机在 Java 中可用 Atomic 等原子类、分布式就 Redis incr。缺点就是：假设我们允许的阈值是1万，..." }, { "title": "Exception解决笔记", "url": "/posts/%E6%97%A5%E5%B8%B8Exception%E8%A7%A3%E5%86%B3/", "categories": "JAVA基础", "tags": "JAVA, Exception", "date": "2021-04-14 21:18:31 +0800", "snippet": "本文主要收集日常开发过程中遇到的异常报错及坑点，以备忘记。1、Invalid bound statement (not found)异常原因分析：配置文件映射关系不存在导致的异常；解决办法：web.xml文件中增加配置文件的扫描目录 &amp;lt;/build&amp;gt; &amp;lt;resources&amp;gt; &amp;lt;resource&amp;gt; &amp;lt;directory&amp;gt;src/main/java&amp;lt;/directory&amp;gt;&amp;lt;!..." }, { "title": "SpringMVC详解", "url": "/posts/SpringMVC%E8%AF%A6%E8%A7%A3/", "categories": "SpringMVC", "tags": "JAVA, SpringMVC", "date": "2021-04-14 21:00:31 +0800", "snippet": "本文旨在记录Spring框架常见的用法，尽可能地将框架灵活运用起来。一、SpringMVC初识二、SpringMVC基本使用三、SpringMVC源码理解" }, { "title": "MyBatis详解", "url": "/posts/MyBatis%E8%AF%A6%E8%A7%A3/", "categories": "MyBatis", "tags": "JAVA, MyBatis", "date": "2021-04-14 21:00:31 +0800", "snippet": "本文旨在记录MyBatis框架常见的用法，尽可能地将框架灵活运用起来。一、MyBatis初识二、MyBatis基本使用三、MyBatis源码理解" }, { "title": "SpringBoot入门学习", "url": "/posts/SpringBoot%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/", "categories": "SpringBoot", "tags": "JAVA, SpringBoot", "date": "2021-04-14 20:47:31 +0800", "snippet": "本文旨在记录SpringBoot框架常见的用法，尽可能地将框架灵活运用起来。1、控制器注解@Controller@ResponseBody + @Controller@RestController映射访问路径@RequestMapping(“/list”)2、控制器return String时，被拦截，访问到对应的html文件使用模板引擎thymeleaf正确找到对应的静态页面文件携带数据跳转到页面：public String list（ModelMap map) { map.put(“k”, “v”); return “list”;}“&amp;lt;h1 th:text=..." }, { "title": "Spring从入门到放弃", "url": "/posts/Spring%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%83/", "categories": "Spring", "tags": "JAVA, Spring", "date": "2021-04-14 20:47:31 +0800", "snippet": "本文旨在记录Spring框架常见的用法，尽可能地将框架灵活运用起来。" }, { "title": "常用maven依赖整理", "url": "/posts/%E5%B8%B8%E7%94%A8maven%E4%BE%9D%E8%B5%96%E6%95%B4%E7%90%86/", "categories": "依赖管理", "tags": "JAVA, Maven", "date": "2021-04-14 20:18:31 +0800", "snippet": "1、json数据返回&amp;lt;!-- https://mvnrepository.com/artifact/com.alibaba/fastjson --&amp;gt;&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.alibaba&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;fastjson&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.2.76&amp;lt;/version&amp;gt..." }, { "title": "EL表达式详解", "url": "/posts/EL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AF%A6%E8%A7%A3/", "categories": "JAVA基础", "tags": "JAVA, EL表达式", "date": "2021-04-14 19:38:31 +0800", "snippet": "内容概要：1、EL表达式介绍 Expression Language表达式语言 是一种在JSP页面获取数据的简单方式(只能获取数据，不能设置数据) 在JSP2.0开始引入概念语法格式：在JSP页面的任何静态部分均可通过：${expression}来获取到指定表达式的值2、EL获取数据(从四大域中获取属性)EL只能从四大域中获取属性，而域的范围从小到大依次是：pageScope：从page范围域属性空间中查找指定的keyrequestScope：从request范围域属性空间中查找指定的keysessionScope：从session范围域属性空间中查找指定的keyapplicati..." }, { "title": "SSM框架整合", "url": "/posts/SSM%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88/", "categories": "Spring", "tags": "JAVA, Spring, MyBatis, SpringMVC", "date": "2021-04-14 16:44:31 +0800", "snippet": "一、开发环境说明开发工具：IntelliJ IDEA 2019.2.3专业版Tomcat：Tomcat 9.0.45MySQL：mysql 5.6二、快速整合ssm三大框架1、创建空的maven项目，如ssm_test;2、通过pom.xml引入依赖：&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&amp;lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://..." }, { "title": "tp5使用笔记", "url": "/posts/tp5%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/", "categories": "PHP框架", "tags": "PHP, ThinkPHP", "date": "2021-04-13 16:52:31 +0800", "snippet": "1.路由书写规则route.php 需要声明：默认tp采用path_info模式的实现路由，默认是：’http://servername/模块/控制器/方法’。但可以通过修改route.php使用路由规则来实现url寻址。默认情况下tp采用的是混合路由规则，即上述两个路由方式共存，但针对不同方法而言，即同一个方法，如果使用两种不同的路由定义方法，路由规则的优先级大于path_info。也可以通过设置严格路由模式，禁止使用path_info使系统较为统一。接下来讲述的是配置路由规则：默认：以配置形式返回return [ &#39;__pattern__&#39; =&amp;gt;..." }, { "title": "使用jekyll搭建github.io博客", "url": "/posts/%E4%BD%BF%E7%94%A8jekyll%E6%90%AD%E5%BB%BAgithub.io%E5%8D%9A%E5%AE%A2/", "categories": "Jekyll", "tags": "Jekyll", "date": "2021-04-10 16:52:31 +0800", "snippet": "一、jekyll安装详见：https://www.jianshu.com/p/9f71e260925d二、主题切换 选择自己喜欢的jekyll主题，我使用的是jekyll-theme-chirpy主题，下载地址：https://github.com/cotes2020/jekyll-theme-chirpy，建议下载zip文件； 将zip文件解压后，直接复制到自己的github项目目录下，项目命名一般是username.github.io； 接下来是部署到github上。由于安全原因，GitHub Pages 的构建强制加了 safe参数，这导致了我..." }, { "title": "Yaf学习笔记", "url": "/posts/Yaf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/", "categories": "PHP框架", "tags": "PHP, Yaf", "date": "2021-01-11 16:23:31 +0800", "snippet": "1、初始化yaf配置：在php扩展目录加入yaf扩展文件后，配置php.ini文件，添加如下代码：;添加yaf扩展extension=php_yaf.dll;设置自动加载机制yaf.use_spl_autoload=1;启用命名空间yaf.use_namespace=12、最基本的yaf目录结构：+ public |- index.php //入口文件 |- .htaccess //重写规则 |+ css |+ img |+ js+ conf |- application.ini //配置文件+ application |+ controllers |- Index..." } ]
