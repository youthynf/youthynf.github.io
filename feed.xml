<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://youthynf.github.io/</id><title>严能发的博客</title><subtitle>全栈开发、学习、分享、记录，架构师成长之路</subtitle> <updated>2021-11-16T06:36:38+08:00</updated> <author> <name>ynf</name> <uri>https://youthynf.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://youthynf.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en-US" href="https://youthynf.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2021 ynf </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Linux系统的内存管理</title><link href="https://youthynf.github.io/posts/Linux%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/" rel="alternate" type="text/html" title="Linux系统的内存管理" /><published>2021-11-09T06:36:31+08:00</published> <updated>2021-11-16T06:36:12+08:00</updated> <id>https://youthynf.github.io/posts/Linux%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/</id> <content src="https://youthynf.github.io/posts/Linux%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/" /> <author> <name>ynf</name> </author> <category term="操作系统" /> <summary> 内存管理的发展过程 DOS操作系统时代 磁盘操作系统（Disk Operating System），是早期个人计算机上的一类操作系统。DOS在IBM PC 兼容机市场中占有举足轻重的地位。可以直接操纵管理硬盘的文件，以DOS的形式运行。微软图形界面操作系统Windows NT问世以来，DOS是一个后台程序的形式出现的。名为Windows命令提示符。可以通过点击运行-CMD进入。 特点：它是一个单用户单任务操作系统，同一时间只能有一个进程在运行（也有一些特殊算法可以支持多进程）。 Windows 9x Windows 9x是指对Windows 95及Windows 98、Windows ME等以Windows 95作基础的微软操作系统的通称。 特点：允许多个进程装入内存，但这时候会引发两个问题：第一，内存空间有限，装载过多的进程时，内存不够用的问题怎么解决；第二，所有的进程... </summary> </entry> <entry><title>Java Web开发模板</title><link href="https://youthynf.github.io/posts/JavaWeb%E6%A8%A1%E6%9D%BF/" rel="alternate" type="text/html" title="Java Web开发模板" /><published>2021-10-25T23:10:31+08:00</published> <updated>2021-11-09T06:34:03+08:00</updated> <id>https://youthynf.github.io/posts/JavaWeb%E6%A8%A1%E6%9D%BF/</id> <content src="https://youthynf.github.io/posts/JavaWeb%E6%A8%A1%E6%9D%BF/" /> <author> <name>ynf</name> </author> <category term="JAVA基础" /> <summary> Java Web开发模板 1、Servlet项目web.xml模板： &amp;lt;?xml version="1.0" encoding="UTF-8" ?&amp;gt; &amp;lt;web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" version="4.0" metadata-complete="true"&amp;gt; ... </summary> </entry> <entry><title>常用的基本排序的Java和PHP实现</title><link href="https://youthynf.github.io/posts/%E5%85%AB%E5%A4%A7%E5%9F%BA%E6%9C%AC%E6%8E%92%E5%BA%8F%E7%9A%84Java%E5%92%8CPHP%E5%AE%9E%E7%8E%B0/" rel="alternate" type="text/html" title="常用的基本排序的Java和PHP实现" /><published>2021-07-02T18:47:31+08:00</published> <updated>2021-11-08T23:20:18+08:00</updated> <id>https://youthynf.github.io/posts/%E5%85%AB%E5%A4%A7%E5%9F%BA%E6%9C%AC%E6%8E%92%E5%BA%8F%E7%9A%84Java%E5%92%8CPHP%E5%AE%9E%E7%8E%B0/</id> <content src="https://youthynf.github.io/posts/%E5%85%AB%E5%A4%A7%E5%9F%BA%E6%9C%AC%E6%8E%92%E5%BA%8F%E7%9A%84Java%E5%92%8CPHP%E5%AE%9E%E7%8E%B0/" /> <author> <name>ynf</name> </author> <category term="数据结构与算法" /> <summary> 常用的基本排序的Java和PHP实现 </summary> </entry> <entry><title>SpringCloud学习笔记</title><link href="https://youthynf.github.io/posts/SpringCloud%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/" rel="alternate" type="text/html" title="SpringCloud学习笔记" /><published>2021-05-19T14:47:31+08:00</published> <updated>2021-11-08T23:20:18+08:00</updated> <id>https://youthynf.github.io/posts/SpringCloud%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/</id> <content src="https://youthynf.github.io/posts/SpringCloud%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0/" /> <author> <name>ynf</name> </author> <category term="SpringCloud" /> <summary> SpringCloud学习笔记 1、SpringCloud基本知识 2、各组件基本使用 2.1 Eureka注册中心 Eureka服务端搭建 pom.xml &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-cloud-starter-netflix-eureka-server&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; application.yml eureka: client: #是否将自己注册到Eureka Server,默认为true，由于当前就是server，故而设置成false，表明该服务不会向e... </summary> </entry> <entry><title>中间件学习之KAFKA</title><link href="https://youthynf.github.io/posts/%E4%B8%AD%E9%97%B4%E4%BB%B6%E4%B9%8BKAFKA/" rel="alternate" type="text/html" title="中间件学习之KAFKA" /><published>2021-05-09T07:23:31+08:00</published> <updated>2021-11-08T23:20:18+08:00</updated> <id>https://youthynf.github.io/posts/%E4%B8%AD%E9%97%B4%E4%BB%B6%E4%B9%8BKAFKA/</id> <content src="https://youthynf.github.io/posts/%E4%B8%AD%E9%97%B4%E4%BB%B6%E4%B9%8BKAFKA/" /> <author> <name>ynf</name> </author> <category term="MQ" /> <summary> KAFKA单机及集群部署学习 一、概述 1、关键作用：解耦、削峰填谷、异步处理 2、常见的MQ消费分类：至多一次消费、没限制 3、kafka名词解释： topic：一个消息只能进入一个topic中； partition：每个topic会根据分区数划分多个分区，每个分区相互独立。消息有key时使用hash分发到对应分区，无key使用轮询分散到各个分区； 分区数：决定每个topic有多少个partition； 副本因子：决定每个partition在kafka集群中有多少个副本，副本在不同的节点上，防止单点故障； broker：kafka集群中的机器，每一个机器就是一个broker，每个broker负责若干个分区。关系：同一个分区只能给一个broker使用，但一个broker可以对应多个分区； offset：每个分区都是顺序的，分区间序列互不干扰；分区内有序，全局不能确保有... </summary> </entry> </feed>
